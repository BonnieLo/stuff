// File: blinker.v
// Generated by MyHDL 0.6
// Date: Mon Oct 17 21:38:19 2011

`timescale 1ns/10ps

module blinker (
    clk,
    button,
    leds
);

input clk;
input button;
output [7:0] leds;
reg [7:0] leds;

reg advance;
reg [7:0] counter;
reg [21:0] dividerCounter;
reg direction;



always @(posedge clk) begin: BLINKER_LOGIC
    if ((!button)) begin
        counter <= 0;
        direction <= 0;
    end
    else if (advance) begin
        if (direction) begin
            if ((counter == (8 - 1))) begin
                direction <= 0;
            end
            else begin
                counter <= (counter + 1);
            end
        end
        else begin
            if ((counter == 0)) begin
                direction <= 1;
            end
            else begin
                counter <= (counter - 1);
            end
        end
        leds <= (1 << counter);
    end
end

always @(posedge clk) begin: BLINKER_DIV
    if ((dividerCounter >= 3125000)) begin
        dividerCounter <= 0;
        advance <= 1;
    end
    else begin
        dividerCounter <= (dividerCounter + 1);
        advance <= 0;
    end
end

endmodule
